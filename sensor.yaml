- platform: template
  sensors:
    ups_load_watts:
      friendly_name: 'UPS Output Load'
      value_template: "{{ (states('sensor.nut_ups_output_voltage')|float * states('sensor.nut_ups_output_current')|float) | round(0) }}"
      unit_of_measurement: 'watts'
      
    hvac_zwave_battery:
      friendly_name: 'HVAC Z-Wave Battery Level'
      value_template: "{{ state_attr('zwave.homeseer_unknown_type0201_id000a_7', 'battery_level') }}"
      unit_of_measurement: '%'
      device_class: battery

    water_heater_zwave_battery:
      friendly_name: 'Water Heater Z-Wave Battery Level'
      value_template: "{{ state_attr('zwave.homeseer_unknown_type0201_id000a_9', 'battery_level') }}"
      unit_of_measurement: '%'
      device_class: battery
      
    office_window_west_zwave_battery:
      friendly_name: 'Office Windows - West Battery Level'
      value_template: "{{ state_attr('zwave.neo_coolcam_doorwindow_detector', 'battery_level') }}"
      unit_of_measurement: '%'
      device_class: battery
      
    office_window_east_zwave_battery:
      friendly_name: 'Office Windows - East Battery Level'
      value_template: "{{ state_attr('zwave.neo_coolcam_doorwindow_detector_2', 'battery_level') }}"
      unit_of_measurement: '%'
      device_class: battery
      
    master_bathroom_multisensor_humidity:
      friendly_name: Master Bathroom Humidity 
      unit_of_measurement: "%"
      value_template: "{{ states('sensor.zooz_zse40_4in1_sensor_relative_humidity') }}"
      device_class: humidity
      
    master_bathroom_multisensor_temperature:
      friendly_name: Master Bathroom Temperature 
      unit_of_measurement: "°F"
      value_template: "{{ states('sensor.zooz_zse40_4in1_sensor_temperature') }}"
      device_class: temperature
      
    master_bathroom_multisensor_battery:
      friendly_name: Master Bathroom Battery 
      unit_of_measurement: "%"
      value_template: "{{ state_attr('zwave.zooz_zse40_4in1_sensor', 'battery_level') }}"
      device_class: battery
      
    master_bathroom_multisensor_illuminance:
      friendly_name: Master Bathroom Illuminance 
      unit_of_measurement: "%"
      value_template: "{{ states('sensor.zooz_zse40_4in1_sensor_luminance') }}"
      device_class: illuminance
      
    office_door_battery:
      friendly_name: Office Door Battery
      unit_of_measurement: "%"
      value_template: "{{ state_attr('zwave.vision_zd2105us5_recessed_doorwindow_sensor', 'battery_level') }}"
      device_class: battery
    
    dishwasher_battery:
      friendly_name: Dishwasher Battery
      unit_of_measurement: "%"
      value_template: "{{ state_attr('zwave.dishwasher_leak', 'battery_level') }}"
      device_class: battery

    octoprint_time_elapsed_friendly:
      friendly_name: "Octoprint time elapsed"
      value_template: "{{ states('sensor.octoprint_time_elapsed') | int | timestamp_custom('%H:%M:%S', 0) }}"

    octoprint_time_remaining_friendly:
      friendly_name: "Octoprint time remaining"
      value_template: "{{ states('sensor.octoprint_time_remaining') | int | timestamp_custom('%H:%M:%S', 0) }}"

    envoy_today_s_net_energy:
      friendly_name: Envoy Today's Net Energy
      device_class: power
      unit_of_measurement: "kWh"
      value_template: "{{ ((states('sensor.envoy_consumption_integrated_meter_today')|float - states('sensor.envoy_production_integrated_meter_today')|float) / 1000) | round(2) }}"
      icon_template: >-
        {% if (states('sensor.envoy_consumption_integrated_meter_today')|float - states('sensor.envoy_production_integrated_meter_today')|float) > 0 %}
          mdi:flash
        {% else %}
          mdi:solar-power
        {% endif %}
        
    envoy_last_seven_days_net_energy:
      friendly_name: Envoy Last Seven Days Net Energy
      device_class: power
      unit_of_measurement: "kWh"
      value_template: "{{ ((states('sensor.envoy_consumption_integrated_meter_last_seven_days')|float - states('sensor.envoy_production_integrated_meter_last_seven_days')|float) / 1000) | round(2) }}"
      icon_template: >-
        {% if (states('sensor.envoy_consumption_integrated_meter_last_seven_days')|float - states('sensor.envoy_production_integrated_meter_last_seven_days')|float) > 0 %}
          mdi:flash
        {% else %}
          mdi:solar-power
        {% endif %}
        
    envoy_lifetime_net_energy:
      friendly_name: Envoy Lifetime Net Energy
      device_class: power
      unit_of_measurement: "MWh"
      value_template: "{{ ((states('sensor.envoy_consumption_integrated_meter_lifetime')|float - states('sensor.envoy_production_integrated_meter_lifetime')|float) / 1000000) | round(2) }}"
      icon_template: >-
        {% if (states('sensor.envoy_consumption_integrated_meter_lifetime')|float - states('sensor.envoy_production_integrated_meter_lifetime')|float) > 0 %}
          mdi:flash
        {% else %}
          mdi:solar-power
        {% endif %}

    tesla_kwh_remaining:
      friendly_name: Tesla kWh Remaining
      unit_of_measurement: "kWh"
      value_template: "{{ states('input_number.tesla_battery_capacity')|float * (states('sensor.ionman_battery_sensor')|float / 100.0) | round(2) }}"

    tesla_target_kwh:
      friendly_name: Tesla Target Charge
      unit_of_measurement: "kWh"
      value_template: "{{ states('input_number.tesla_battery_capacity')|float * (states('input_number.tesla_target_charge_soc')|float / 100.0) | round(2)}}"

    tesla_kwh_to_target:
      friendly_name: Tesla kWh to Target Charge
      unit_of_measurement: "kWh"
      value_template: "{{ (states('sensor.tesla_target_kwh')|float - states('sensor.tesla_kwh_remaining')|float) | round(2) }}"
      
     # Use UPS and Envoy to generate Phase A and Phase B voltages
    phase_a_voltage:
      friendly_name: Phase A Voltage
      unit_of_measurement: "V"
      value_template: "{{ states('sensor.nut_ups_input_voltage')|float | round(2)}}"

    phase_b_voltage:
      friendly_name: Phase B Voltage
      unit_of_measurement: "V"
      value_template: "{{ ((states('sensor.envoy_distribution_panel_voltage')|float) - (states('sensor.phase_a_voltage')|float)) | round(2)}}"
  
    phase_delta_voltage:
      friendly_name: Phase A/B Delta Voltage
      unit_of_measurement: "V"
      value_template: "{{ ((states('sensor.phase_a_voltage')|float) - (states('sensor.phase_b_voltage')|float)) | round(2) | abs }}"

- platform: command_line
  name: CPU Temp
  command: "/bin/cat /sys/class/thermal/thermal_zone0/temp"
  unit_of_measurement: "ºC"
  value_template: '{{ value | multiply(0.001) }}'
- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: processor_use
    - type: last_boot

- platform: nut
  host: !secret nuts_host
  port: !secret nuts_port
  username: !secret nuts_username
  password: !secret nuts_password
  resources:
    - input.transfer.reason
    - battery.charge
    - battery.runtime
    - battery.voltage
    - input.voltage
    - output.voltage
    - output.current
    - ups.temperature
    - ups.load
    - ups.status
    - ups.status.display
    
- platform: darksky
  api_key: !secret darksky
  forecast: 
    - 0
  monitored_conditions:
    - summary
    - precip_type
    - precip_intensity
    - precip_probability
    - precip_accumulation
    - temperature
    - apparent_temperature
    - dew_point
    - wind_speed
    - wind_bearing
    - cloud_cover
    - humidity
    - pressure
    - visibility
    - ozone
    - minutely_summary
    - hourly_summary
    - daily_summary
    - temperature_high
    - temperature_low
    - apparent_temperature_high
    - apparent_temperature_low
    - precip_intensity_max
    - uv_index
    - icon
    
- platform: nexia
- platform: octoprint
- platform: rest
  name: Envoy Production Integrated Meter - Lifetime
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].whLifetime) }}'
  method: GET
  unit_of_measurement: "Wh"
  
- platform: rest
  name: Envoy Production Integrated Meter - Last Seven Days
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].whLastSevenDays) }}'
  method: GET
  unit_of_measurement: "Wh"
  
- platform: rest
  name: Envoy Production Integrated Meter - Today
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].whToday) }}'
  method: GET
  unit_of_measurement: "Wh"
  
- platform: rest
  name: Envoy Production Integrated Meter - Now
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].wNow) }}'
  method: GET
  unit_of_measurement: "W"
  scan_interval: 1
  
# Envoy Integrated Meter - Total Consumption
- platform: rest
  name: Envoy Consumption Integrated Meter - Lifetime
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].whLifetime) }}'
  method: GET
  unit_of_measurement: "Wh"
- platform: rest
  name: Envoy Consumption Integrated Meter - Last Seven Days
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].whLastSevenDays) }}'
  method: GET
  unit_of_measurement: "Wh"
- platform: rest
  name: Envoy Consumption Integrated Meter - Today
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].whToday) }}'
  #value_template: '{{ "%.1f" | format(float(value_json.consumption[0].whToday) / 1000) }}'
  method: GET
  unit_of_measurement: "Wh"
- platform: rest
  name: Envoy Consumption Integrated Meter - Now
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].wNow) }}'
  method: GET
  unit_of_measurement: "W"
  scan_interval: 1

- platform: rest
  name: Envoy Distribution Panel - Voltage
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].rmsVoltage) }}'
  method: GET
  unit_of_measurement: "V"
  scan_interval: 1
  
- platform: rest
  name: Envoy Distribution Panel - Current
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[0].rmsCurrent) }}'
  method: GET
  unit_of_measurement: "A"
  scan_interval: 1
  
- platform: rest
  name: Envoy Solar - Voltage
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].rmsVoltage) }}'
  method: GET
  unit_of_measurement: "V"
  scan_interval: 1
  
- platform: rest
  name: Envoy Solar - Current
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.production[1].rmsCurrent) }}'
  method: GET
  unit_of_measurement: "A"
  scan_interval: 1
  

# Envoy Integrated Meter - Net Consumption
- platform: rest
  name: Net Consumption - Now
  resource: !secret enphase_envoy_rest_address
  value_template: '{{ "%.1f" | format(value_json.consumption[1].wNow) }}'
  method: GET
  unit_of_measurement: "W"
  scan_interval: 1


- platform: zoneminder


